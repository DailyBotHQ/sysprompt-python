name: CI/CD for Sysprompt

on:
  push:
    branches:
      - main  # Ejecutar pruebas en cada push al branch main
  pull_request:
    branches:
      - main  # Ejecutar pruebas en cada pull request hacia main
  # Automatizar publicaci贸n en PyPI cuando se cree un nuevo tag
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11, 3.13]
    steps:
      # Configurar Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy pytest

      # Ejecutar pruebas
      - name: Run tests
        run: pytest

      # Verificar tipos con mypy
      - name: Run mypy
        run: mypy sysprompt

  publish:
    # Solo ejecuta este trabajo si se crea un tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11  # Usamos una versi贸n estable para construir

      # Configurar el repositorio
      - name: Check out code
        uses: actions/checkout@v3

      # Instalar herramientas de construcci贸n
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Construir el paquete
      - name: Build package
        run: python -m build

      # Validar el paquete
      - name: Verify package with Twine
        run: twine check dist/*

      # Subir el paquete a PyPI
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__  # Obligatorio para autenticaci贸n
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}  # Secreto configurado
        run: twine upload dist/*
